name: Publish to NuGet
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget
  PR_NUMBER: ${{ github.run_number  }}
  
defaults:
  run:
    shell: pwsh
    
jobs:
  create_nuget:
    runs-on: ubuntu-latest
    steps:
    - name: Get current date
      id: current_date
      run: echo "CURRENT_DATE=$(date +'%Y.%m')" >> $GITHUB_ENV
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
    - run: |
       echo PR_NUMBER='${{ CURRENT_DATE }}'.'${{ env.PR_NUMBER }}'
       dotnet build LimDB.lib/LimDB.lib.csproj -c Release /p:${{ env.PR_NUMBER }}
    - run: dotnet pack LimDB.lib/LimDB.lib.csproj -c Release --output ${{ env.NuGetDirectory }}
    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg

  run_test:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      - name: Run tests
        run: dotnet test --configuration Release

  deploy:
    runs-on: ubuntu-latest
    needs: [ run_test ]
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
    - name: Publish NuGet package
      run: |
        foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
            dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json
        }
